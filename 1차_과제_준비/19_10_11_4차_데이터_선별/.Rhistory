result = read.csv("R_code/result.csv", header = T, as.is= T)
setwd("C:/Users/mapia/Desktop/kmu/system/과제 준비/1차_과제_준비/19_10_11_4차_데이터_선별/")
library(ggmap)
citation("ggmap")
register_google(key = 'AIzaSyBWNs1CFU_ZFVAxpxbQS1Jkk4OoyeK3hFY ')
map <- get_map(location='south korea', zoom=7, maptype='roadmap', color='bw')
ggmap(map)
install.packages("raster")
library(raster)
korea <- getData('GADM', country='kor', level=2)
ggplot() + geom_polygon(data=korea, aes(x=long, y=lat, group=group), fill='white', color='black')
result = read.csv("R_code/result.csv", header = T, as.is= T)
korea
head(korea)
korea = merge(korea, result, by = 'id')
korea = fortify(korea, region = 'SIG_CD')
korea
head(korea)
setwd("C:/Users/mapia/Desktop/kmu/system/과제 준비/1차_과제_준비/19_10_11_4차_데이터_선별/")
library(readxl)
df_exam = read_excel("분야별_기준_데이터/분야별 근무예정지 인원수.xlsx")
df_exam = df_exam[2:5]
library(ggmap)
register_google(key = 'AIzaSyBWNs1CFU_ZFVAxpxbQS1Jkk4OoyeK3hFY ')
map <- get_map(location='south korea', zoom=7, maptype='roadmap', color='bw')
ggmap(map)
library(raster)
korea <- getData('GADM', country='kor', level=2)
ggplot() + geom_polygon(data=korea, aes(x=long, y=lat, group=group), fill='white', color='black')
result = read.csv("R_code/result.csv", header = T, as.is= T)
head(result[1:9])
korea <- fortify(korea, region = 'SIG_CD')
library(tmaptools)
korea <- fortify(korea, region = 'SIG_CD')
library(maptools)
install.packages(maptools)
korea <- fortify(korea, region = 'SIG_CD')
korea = shapefile("R_code/data/TL_SCCO_SIG.shp")
ggplot() + geom_polygon(data=korea, aes(x=long, y=lat, group=group), fill='white', color='black')
head(korea)
korea <- fortify(korea, region = 'SIG_CD')
install.packages("maptools")
korea <- fortify(korea, region = 'SIG_CD')
korea = merge(korea, result, by ='id')
gplot() + geom_polygon(data=korea, aes(x=long, y=lat, group=group, fill=moon))
ggplot() + geom_polygon(data=korea, aes(x=long, y=lat, group=group, fill=moon))
p + scale_fill_gradient(low='white', high = "#004ea2")
p <- ggplot() + geom_polygon(data=korea, aes(x=long, y=lat, group=group, fill=moon))
p + scale_fill_gradient(low='white', high = "#004ea2")
p + scale_fill_gradient(low='white', high = "#004ea2") + theme_void() + guide(fill=F)
p + scale_fill_gradient(low='white', high = "#004ea2") + theme_void() + guides(fill=F)
